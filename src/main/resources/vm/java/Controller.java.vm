package ${basePackage}.web.controller.${moduleName};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${package}.entity.ResponsePageEntity;
import ${package}.entity.${className}ConditionEntity;
import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import javax.validation.constraints.NotNull;
import java.util.List;

/**
 * ${tableComment} 接口层
 *
 * @author ${author} 该项目是知识星球：java突击队 的内部项目
 * @date ${datetime}
 */
@RestController
@RequestMapping("/v1/${classname}")
public class ${className}Controller {

	@Autowired
	private ${className}Service ${classname}Service;

	/**
	 * 通过id查询${tableComment}信息
	 *
	 * @param id 系统ID
	 * @return ${tableComment}信息
	 */
	@GetMapping("/findById")
	public ${className}Entity findById(Long id) {
		return ${classname}Service.findById(id);
	}

	/**
    * 根据条件查询${tableComment}列表
    *
    * @param ${classname}ConditionEntity 条件
    * @return ${tableComment}列表
    */
	@PostMapping("/searchByPage")
	public ResponsePageEntity<${className}Entity> searchByPage(@RequestBody ${className}ConditionEntity ${classname}ConditionEntity) {
		return ${classname}Service.searchByPage(${classname}ConditionEntity);
	}


	/**
     * 添加${tableComment}
     *
     * @param ${classname}Entity ${tableComment}实体
     * @return 影响行数
     */
	@PostMapping("/insert")
	public int insert(@RequestBody ${className}Entity ${classname}Entity) {
		return ${classname}Service.insert(${classname}Entity);
	}

	/**
     * 修改${tableComment}
     *
     * @param ${classname}Entity ${tableComment}实体
     * @return 影响行数
     */
	@PostMapping("/update")
	public int update(@RequestBody ${className}Entity ${classname}Entity) {
		return ${classname}Service.update(${classname}Entity);
	}

	/**
     * 批量删除${tableComment}
     *
     * @param ids ${tableComment}ID集合
     * @return 影响行数
     */
	@PostMapping("/deleteByIds")
	public int deleteByIds(@RequestBody @NotNull List<Long> ids) {
		return ${classname}Service.deleteByIds(ids);
	}
}
